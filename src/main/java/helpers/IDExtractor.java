package helpers;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class IDExtractor {

    public static void main(String[] args) {
        String res = extractId("ljgdf dipfug ID: khf6-juyr6u-gbeth-35hbb");
        System.out.println(res);
    }
    public static String extractId(String input) {
/*Здесь создается регулярное выражение (шаблон), которое ищет подстроку,
начинающуюся с "ID: " и за которой следует один или более непробельных символов (\\S+).
 Скобки вокруг \\S+ означают, что это группа символов, которую мы будем извлекать.*/
        Pattern pattern = Pattern.compile("ID: (\\S+)");
        /*
        *
        *     \S: Это метасимвол, обозначающий любой символ, который не является пробельным символом
        * (пробел, табуляция, новая строка и т.д.). Он соответствует любому символу, кроме пробелов.
    +: Это квантификатор, который указывает, что предыдущий элемент (в данном случае \S)
    * должен повторяться один или более раз.*/
        Matcher matcher = pattern.matcher(input); /*Создается объект Matcher,
        который ассоциируется с входной строкой input и использует
        ранее определенный шаблон для поиска соответствий в этой строке.*/


        if (matcher.find()) {
/*В этом блоке выполняется поиск соответствия шаблону во входной строке.
Если соответствие найдено (с помощью метода find()), то вызывается метод group(1),
который возвращает значение подгруппы, соответствующей первой скобке в регулярном выражении
(т.е. значение, захваченное в скобках вокруг \\S+). Это значение (ID)
затем возвращается как результат метода extractId. Если соответствие не найдено, возвращается null.*/
            return matcher.group(1);
        } else {

            return null;
        }
    }

}
